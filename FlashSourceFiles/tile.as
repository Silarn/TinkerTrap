package  {		import flash.display.MovieClip;		public class tile extends MovieClip {				public var walkable: Boolean;		public var active: Boolean = false;		public var locked: Boolean = false;		public var used: Boolean = false;		public var wait: int = 0;		public var hold: Boolean = false;		public var nextWait: int;		public var depth, xiso, yiso: Number;		public var connection: Array = new Array();		public var lockGroup: Array = new Array();		public var type, gridx, gridy: int;				public function tile(t: int, gx, gy) {			type = t;			gridx = gx;			gridy = gy;			switch (type) {				case 2:					locked = true;				case 0:				case 8:					walkable = true;					break;				case 4:				case 5:				case 1:				case 3:				case 6:				case 7:					walkable = false;					break;			}			gotoAndStop(type+1);		}			public function setConnection(target: int): void {			connection.push(target);		}				public function setLock(target: int): void {			lockGroup.push(target);		}				public function interact(): Array {			switch (type) {				default:					return [0];					break;				case 3:				case 6:					return connection;					break;			}		}				public function act(objs: Array): Array {			switch (type) {				default:					break;				case 2:					var occupied: Boolean = false;					for (var i: int = 0; i < objs.length; i++)						if (objs[i].xtile == gridx && objs[i].ytile == gridy)							occupied = true;					if (locked == occupied) {						switch (locked) {							case true:								MovieClip(getChildByName("clip")).gotoAndPlay("on");								break;							case false:								MovieClip(getChildByName("clip")).gotoAndPlay("off");								break;						}						locked = !locked;						active = !active;						return connection;    				}					break;				case 3:				case 6:					if (used) {						if (active)							MovieClip(getChildByName("clip")).gotoAndPlay("Off");						else							MovieClip(getChildByName("clip")).gotoAndPlay("On");						active = !active;						used = false;					}					break;				case 4:				case 5:					if (used) {                        used = false;                        if (hold) {                            hold = false;						} else {                            if (wait > 0) {                                wait--;                            }                            if (wait == 0) {                                if (active)                                    MovieClip(getChildByName("clip")).gotoAndPlay("startClosed");                                else                                    MovieClip(getChildByName("clip")).gotoAndPlay("startOpen");                                active = !active;                                walkable = !walkable;                                depth = (gridx+gridy-0.99)*30/2*300+(gridx-gridy)*30+1;                                wait = nextWait-1;                                hold = true;                                return connection;                            }					    }					}					break;			}			return null;		}	}}